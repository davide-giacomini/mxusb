diff --git a/_examples/uc_side/Makefile b/_examples/uc_side/Makefile
index 7b7a4f0..4c844b6 100644
--- a/_examples/uc_side/Makefile
+++ b/_examples/uc_side/Makefile
@@ -27,7 +27,7 @@ LIBS := mxusb/libmxusb.a
 ##
 ## List here additional include directories (in the form -Iinclude_dir)
 ##
-INCLUDE_DIRS :=
+INCLUDE_DIRS := -Imxusb
 
 ##############################################################################
 ## You should not need to modify anything below                             ##
diff --git a/_examples/uc_side/mxusb_demo.cpp b/_examples/uc_side/mxusb_demo.cpp
index 18df0af..70e4e45 100644
--- a/_examples/uc_side/mxusb_demo.cpp
+++ b/_examples/uc_side/mxusb_demo.cpp
@@ -26,7 +26,7 @@
  ***************************************************************************/
 
 #include "mxusb/usb.h"
-#include "mxusb/usb_config.h"
+#include <config/usb_config.h>
 #include <cstdio>
 
 using namespace mxusb;
diff --git a/_examples/uc_side/mxusb_serial.cpp b/_examples/uc_side/mxusb_serial.cpp
index 4a98830..8c72d75 100644
--- a/_examples/uc_side/mxusb_serial.cpp
+++ b/_examples/uc_side/mxusb_serial.cpp
@@ -27,7 +27,7 @@
 
 #include "miosix.h"
 #include "mxusb/usb.h"
-#include "mxusb/usb_config.h"
+#include <config/usb_config.h>
 #include "mxusb/ep0.h"
 #include <cstdio>
 #include <cstring>
diff --git a/_testsuite/uc_side/Makefile b/_testsuite/uc_side/Makefile
index fe9f3a6..a3cb791 100644
--- a/_testsuite/uc_side/Makefile
+++ b/_testsuite/uc_side/Makefile
@@ -27,7 +27,7 @@ LIBS := mxusb/libmxusb.a
 ##
 ## List here additional include directories (in the form -Iinclude_dir)
 ##
-INCLUDE_DIRS :=
+INCLUDE_DIRS := -Imxusb
 
 ##############################################################################
 ## You should not need to modify anything below                             ##
diff --git a/_testsuite/uc_side/mxusb_testsuite.cpp b/_testsuite/uc_side/mxusb_testsuite.cpp
index 3c85d54..f6b6359 100644
--- a/_testsuite/uc_side/mxusb_testsuite.cpp
+++ b/_testsuite/uc_side/mxusb_testsuite.cpp
@@ -26,7 +26,7 @@
  ***************************************************************************/
 
 #include "mxusb/usb.h"
-#include "mxusb/usb_config.h"
+#include <config/usb_config.h>
 #include "miosix.h"
 #include "mxusb/ep0.h"
 #include <cstdio>
diff --git a/config/usb_config.h b/config/usb_config.h
new file mode 100644
index 0000000..73d8f53
--- /dev/null
+++ b/config/usb_config.h
@@ -0,0 +1,72 @@
+/***************************************************************************
+ *   Copyright (C) 2011 by Terraneo Federico                               *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   As a special exception, if other files instantiate templates or use   *
+ *   macros or inline functions from this file, or you compile this file   *
+ *   and link it with other works to produce a work based on this file,    *
+ *   this file does not by itself cause the resulting work to be covered   *
+ *   by the GNU General Public License. However the source code for this   *
+ *   file must still be made available in accordance with the GNU General  *
+ *   Public License. This exception does not invalidate any other reasons  *
+ *   why a work based on this file might be covered by the GNU General     *
+ *   Public License.                                                       *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, see <http://www.gnu.org/licenses/>   *
+ ***************************************************************************/
+
+#ifndef USB_CONFIG_H
+#define	USB_CONFIG_H
+
+#define USB_CONFIG_VERSION 100
+
+/**
+ * \file usb_config.h
+ * This file contains configuration parameters for the mxusb library.
+ */
+
+namespace mxusb {
+
+//
+// configuration parameters for the mxgui library
+//
+
+/// Size of buffer for endpoint zero. This constant is put here because it
+/// must be accessible also from user code, to fill in the value in the device
+/// descriptor. The USB standard specifies that only 8,16,32,64 are valid values
+const unsigned short EP0_SIZE=32;
+
+/// Enable descriptor validation.<br>
+/// While developing, this should be kept enabled so that if an error is
+/// introduced in the descriptors, the USB stack will refuse to start and
+/// print an error message. When releasing code, to minimize
+/// code size it can be disabled.
+//#define MXUSB_ENABLE_DESC_VALIDATION
+
+/// Enable trace mode.<br>
+/// This spawns a background thread which prints debug data.<br>
+/// Since data is printed in a thread, the time needed to print does not cause
+/// interrupt latency.
+//#define MXUSB_ENABLE_TRACE
+
+/// Enable printing also TracePoints tagged as verbose.<br>
+/// Useful for debugging enumeration issues.
+//#define MXUSB_PRINT_VERBOSE
+
+/// Size of buffer used to move data from the interrupt routine to the
+/// printing thread.
+const unsigned int QUEUE_SIZE=1024;
+
+} //namespace mxusb
+
+#endif //USB_CONFIG_H
diff --git a/config/usb_gpio.h b/config/usb_gpio.h
new file mode 100644
index 0000000..bd7cef8
--- /dev/null
+++ b/config/usb_gpio.h
@@ -0,0 +1,104 @@
+/***************************************************************************
+ *   Copyright (C) 2011 by Terraneo Federico                               *
+ *                                                                         *
+ *   This program is free software; you can redistribute it and/or modify  *
+ *   it under the terms of the GNU General Public License as published by  *
+ *   the Free Software Foundation; either version 2 of the License, or     *
+ *   (at your option) any later version.                                   *
+ *                                                                         *
+ *   This program is distributed in the hope that it will be useful,       *
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
+ *   GNU General Public License for more details.                          *
+ *                                                                         *
+ *   As a special exception, if other files instantiate templates or use   *
+ *   macros or inline functions from this file, or you compile this file   *
+ *   and link it with other works to produce a work based on this file,    *
+ *   this file does not by itself cause the resulting work to be covered   *
+ *   by the GNU General Public License. However the source code for this   *
+ *   file must still be made available in accordance with the GNU General  *
+ *   Public License. This exception does not invalidate any other reasons  *
+ *   why a work based on this file might be covered by the GNU General     *
+ *   Public License.                                                       *
+ *                                                                         *
+ *   You should have received a copy of the GNU General Public License     *
+ *   along with this program; if not, see <http://www.gnu.org/licenses/>   *
+ ***************************************************************************/
+
+#ifdef _MIOSIX
+#include "interfaces/gpio.h"
+#else //_MIOSIX
+#include "libraries/gpio.h"
+#endif //_MIOSIX
+
+#ifndef USB_GPIO_H
+#define	USB_GPIO_H
+
+#define USB_GPIO_VERSION 100
+
+namespace mxusb {
+
+/**
+ * This class provides support for configuring USB GPIO pins, in particular
+ * the pin connected to a 1.5K pullup to signal to the host that a device is
+ * present. It might need to be adapted to match the circuit schematic of
+ * the board used, since the GPIO that can be used for this purpose is not
+ * unique.
+ */
+class USBgpio
+{
+private:
+    /*
+     * Note: change these to reflect the hardware set up.
+     */
+    #ifdef _MIOSIX
+    typedef miosix::Gpio<GPIOA_BASE,11> dp;         //USB d+
+    typedef miosix::Gpio<GPIOA_BASE,12> dm;         //USB d-
+    typedef miosix::Gpio<GPIOB_BASE,14> disconnect; //USB disconnect
+    #else //_MIOSIX
+    typedef Gpio<GPIOA_BASE,11> dp;         //USB d+
+    typedef Gpio<GPIOA_BASE,12> dm;         //USB d-
+    typedef Gpio<GPIOB_BASE,14> disconnect; //USB disconnect
+    #endif //_MIOSIX
+
+public:
+    /**
+     * \internal
+     * Initializes USB related GPIOs
+     */
+    static void init()
+    {
+        #ifdef _MIOSIX
+        using namespace miosix;
+        #endif //_MIOSIX
+        //Enable portB (USB disconnect) and afio
+        RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_AFIOEN;
+
+        disconnect::mode(Mode::OPEN_DRAIN);
+        disconnect::high();
+    }
+
+    /**
+     * \internal
+     * Enable 1.5K pullup resistor, to signal to the host that a devce has
+     * been connected.
+     */
+    static void enablePullup()
+    {
+        disconnect::low();
+    }
+
+    /**
+     * \internal
+     * Disable the 1.5K pullup resistor, to signal to the host that the device
+     * has been disconnected.
+     */
+    static void disablePullup()
+    {
+        disconnect::high();
+    }
+};
+
+} //namespace mxusb
+
+#endif //USB_GPIO_H
diff --git a/def_ctrl_pipe.cpp b/def_ctrl_pipe.cpp
index 30547e9..d2191e2 100644
--- a/def_ctrl_pipe.cpp
+++ b/def_ctrl_pipe.cpp
@@ -27,11 +27,11 @@
 
 #include <algorithm>
 #include <cstdio>
+#include <config/usb_config.h>
 #include "def_ctrl_pipe.h"
 #include "shared_memory.h"
 #include "usb_util.h"
 #include "usb_tracer.h"
-#include "usb_config.h"
 #include "usb_impl.h"
 #include "ep0.h"
 
diff --git a/shared_memory.h b/shared_memory.h
index f216699..846cb38 100644
--- a/shared_memory.h
+++ b/shared_memory.h
@@ -30,7 +30,7 @@
 #error "If your code depends on a private header, it IS broken."
 #endif //MXUSB_LIBRARY
 
-#include "usb_config.h"
+#include <config/usb_config.h>
 
 #ifndef SHARED_MEMORY_H
 #define	SHARED_MEMORY_H
diff --git a/usb.cpp b/usb.cpp
index 2e36104..e73b497 100644
--- a/usb.cpp
+++ b/usb.cpp
@@ -29,11 +29,19 @@
 #include "stm32_usb_regs.h"
 #include "shared_memory.h"
 #include "def_ctrl_pipe.h"
-#include "usb_gpio.h"
 #include "usb_tracer.h"
 #include "usb_impl.h"
+#include <config/usb_gpio.h>
+#include <config/usb_config.h>
 #include <algorithm>
 
+#if USB_CONFIG_VERSION != 100
+#error Wrong usb_config.h version. You need to upgrade it.
+#endif
+#if USB_GPIO_VERSION != 100
+#error Wrong usb_gpio.h version. You need to upgrade it.
+#endif
+
 #ifdef _MIOSIX
 #include "interfaces/delays.h"
 #include "kernel/kernel.h"
diff --git a/usb_config.h b/usb_config.h
deleted file mode 100644
index 8ac8250..0000000
--- a/usb_config.h
+++ /dev/null
@@ -1,70 +0,0 @@
-/***************************************************************************
- *   Copyright (C) 2011 by Terraneo Federico                               *
- *                                                                         *
- *   This program is free software; you can redistribute it and/or modify  *
- *   it under the terms of the GNU General Public License as published by  *
- *   the Free Software Foundation; either version 2 of the License, or     *
- *   (at your option) any later version.                                   *
- *                                                                         *
- *   This program is distributed in the hope that it will be useful,       *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
- *   GNU General Public License for more details.                          *
- *                                                                         *
- *   As a special exception, if other files instantiate templates or use   *
- *   macros or inline functions from this file, or you compile this file   *
- *   and link it with other works to produce a work based on this file,    *
- *   this file does not by itself cause the resulting work to be covered   *
- *   by the GNU General Public License. However the source code for this   *
- *   file must still be made available in accordance with the GNU General  *
- *   Public License. This exception does not invalidate any other reasons  *
- *   why a work based on this file might be covered by the GNU General     *
- *   Public License.                                                       *
- *                                                                         *
- *   You should have received a copy of the GNU General Public License     *
- *   along with this program; if not, see <http://www.gnu.org/licenses/>   *
- ***************************************************************************/
-
-#ifndef USB_CONFIG_H
-#define	USB_CONFIG_H
-
-/**
- * \file usb_config.h
- * This file contains configuration parameters for the mxusb library.
- */
-
-namespace mxusb {
-
-//
-// configuration parameters for the mxgui library
-//
-
-/// Size of buffer for endpoint zero. This constant is put here because it
-/// must be accessible also from user code, to fill in the value in the device
-/// descriptor. The USB standard specifies that only 8,16,32,64 are valid values
-const unsigned short EP0_SIZE=32;
-
-/// Enable descriptor validation.<br>
-/// While developing, this should be kept enabled so that if an error is
-/// introduced in the descriptors, the USB stack will refuse to start and
-/// print an error message. When releasing code, to minimize
-/// code size it can be disabled.
-//#define MXUSB_ENABLE_DESC_VALIDATION
-
-/// Enable trace mode.<br>
-/// This spawns a background thread which prints debug data.<br>
-/// Since data is printed in a thread, the time needed to print does not cause
-/// interrupt latency.
-//#define MXUSB_ENABLE_TRACE
-
-/// Enable printing also TracePoints tagged as verbose.<br>
-/// Useful for debugging enumeration issues.
-//#define MXUSB_PRINT_VERBOSE
-
-/// Size of buffer used to move data from the interrupt routine to the
-/// printing thread.
-const unsigned int QUEUE_SIZE=1024;
-
-} //namespace mxusb
-
-#endif //USB_CONFIG_H
diff --git a/usb_gpio.h b/usb_gpio.h
deleted file mode 100644
index a21a35c..0000000
--- a/usb_gpio.h
+++ /dev/null
@@ -1,102 +0,0 @@
-/***************************************************************************
- *   Copyright (C) 2011 by Terraneo Federico                               *
- *                                                                         *
- *   This program is free software; you can redistribute it and/or modify  *
- *   it under the terms of the GNU General Public License as published by  *
- *   the Free Software Foundation; either version 2 of the License, or     *
- *   (at your option) any later version.                                   *
- *                                                                         *
- *   This program is distributed in the hope that it will be useful,       *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
- *   GNU General Public License for more details.                          *
- *                                                                         *
- *   As a special exception, if other files instantiate templates or use   *
- *   macros or inline functions from this file, or you compile this file   *
- *   and link it with other works to produce a work based on this file,    *
- *   this file does not by itself cause the resulting work to be covered   *
- *   by the GNU General Public License. However the source code for this   *
- *   file must still be made available in accordance with the GNU General  *
- *   Public License. This exception does not invalidate any other reasons  *
- *   why a work based on this file might be covered by the GNU General     *
- *   Public License.                                                       *
- *                                                                         *
- *   You should have received a copy of the GNU General Public License     *
- *   along with this program; if not, see <http://www.gnu.org/licenses/>   *
- ***************************************************************************/
-
-#ifdef _MIOSIX
-#include "interfaces/gpio.h"
-#else //_MIOSIX
-#include "libraries/gpio.h"
-#endif //_MIOSIX
-
-#ifndef USB_GPIO_H
-#define	USB_GPIO_H
-
-namespace mxusb {
-
-/**
- * This class provides support for configuring USB GPIO pins, in particular
- * the pin connected to a 1.5K pullup to signal to the host that a device is
- * present. It might need to be adapted to match the circuit schematic of
- * the board used, since the GPIO that can be used for this purpose is not
- * unique.
- */
-class USBgpio
-{
-private:
-    /*
-     * Note: change these to reflect the hardware set up.
-     */
-    #ifdef _MIOSIX
-    typedef miosix::Gpio<GPIOA_BASE,11> dp;         //USB d+
-    typedef miosix::Gpio<GPIOA_BASE,12> dm;         //USB d-
-    typedef miosix::Gpio<GPIOB_BASE,14> disconnect; //USB disconnect
-    #else //_MIOSIX
-    typedef Gpio<GPIOA_BASE,11> dp;         //USB d+
-    typedef Gpio<GPIOA_BASE,12> dm;         //USB d-
-    typedef Gpio<GPIOB_BASE,14> disconnect; //USB disconnect
-    #endif //_MIOSIX
-
-public:
-    /**
-     * \internal
-     * Initializes USB related GPIOs
-     */
-    static void init()
-    {
-        #ifdef _MIOSIX
-        using namespace miosix;
-        #endif //_MIOSIX
-        //Enable portB (USB disconnect) and afio
-        RCC->APB2ENR |= RCC_APB2ENR_IOPBEN | RCC_APB2ENR_AFIOEN;
-
-        disconnect::mode(Mode::OPEN_DRAIN);
-        disconnect::high();
-    }
-
-    /**
-     * \internal
-     * Enable 1.5K pullup resistor, to signal to the host that a devce has
-     * been connected.
-     */
-    static void enablePullup()
-    {
-        disconnect::low();
-    }
-
-    /**
-     * \internal
-     * Disable the 1.5K pullup resistor, to signal to the host that the device
-     * has been disconnected.
-     */
-    static void disablePullup()
-    {
-        disconnect::high();
-    }
-};
-
-} //namespace mxusb
-
-#endif //USB_GPIO_H
diff --git a/usb_tracer.h b/usb_tracer.h
index 8622b1a..5cd628d 100644
--- a/usb_tracer.h
+++ b/usb_tracer.h
@@ -30,7 +30,7 @@
 #error "If your code depends on a private header, it IS broken."
 #endif //MXUSB_LIBRARY
 
-#include "usb_config.h"
+#include <config/usb_config.h>
 
 #ifdef MXUSB_ENABLE_TRACE
 #include "miosix.h"
